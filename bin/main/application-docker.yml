spring:
  datasource:
    url: ${DB_URL}&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      register-mbeans: true
      metrics-name: hikaricp
      pool-name: "DockerDB-Pool"
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false  # Docker에서는 로그 최소화
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.MySQLDialect
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 4
          min-idle: 2
          max-wait: -1ms
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
      file-size-threshold: 2KB

# 파일 업로드 설정 (Docker 볼륨 마운트)
file:
  upload:
    path: uploads

# Actuator 설정 (Prometheus 메트릭 노출)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    distribution:
      percentiles-histogram:
        "http.server.requests": true
      percentiles:
        "http.server.requests": 0.5, 0.95, 0.99
      slo:
        "http.server.requests": 50ms, 100ms, 200ms, 500ms, 1s, 2s, 5s

# Docker 환경에서 로깅 레벨 조정
logging:
  level:
    com.example: INFO
    org.springframework: WARN
    org.hibernate: WARN

