name: Deploy to EC2

on:
  push:
    branches: [ master ]
  workflow_dispatch:  # 수동 실행 가능

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        # SSH 키 저장 (줄바꿈 복원)
        echo -e "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        chmod 700 ~/.ssh
        echo "SSH 키 설정 완료"
        ls -la ~/.ssh/
        echo "SSH 키 형식 확인:"
        head -1 ~/.ssh/id_rsa
        tail -1 ~/.ssh/id_rsa
        
    - name: Add EC2 to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts || true
        chmod 600 ~/.ssh/known_hosts
        
    - name: Test SSH connection
      run: |
        echo "SSH 연결 테스트 시작..."
        echo "Host: ${{ secrets.EC2_HOST }}"
        echo "User: ${{ secrets.EC2_USER }}"
        echo "SSH 키 파일 확인:"
        ls -la ~/.ssh/id_rsa
        echo "SSH 연결 테스트:"
        ssh -i ~/.ssh/id_rsa -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} 'echo "SSH 연결 성공!"'
        
    - name: Deploy application
      run: |
        ssh -i ~/.ssh/id_rsa -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          echo "=== 배포 시작 ==="
          
          # 기존 프로세스 종료
          echo "기존 프로세스 확인 및 종료..."
          if pgrep -f exProject > /dev/null; then
            echo "실행 중인 프로세스 발견, 종료 중..."
            pkill -f exProject
            sleep 2
          else
            echo "실행 중인 프로세스 없음"
          fi
          
          # 프로젝트 클론/업데이트
          echo "프로젝트 클론/업데이트..."
          if [ -d "exchange_rate_admin" ]; then
            cd exchange_rate_admin
            git pull origin master
          else
            git clone https://github.com/${{ github.repository }}.git exchange_rate_admin
            cd exchange_rate_admin
          fi
          
          # 애플리케이션 빌드
          echo "애플리케이션 빌드..."
          ./gradlew clean build -x test
          
          # 환경변수 설정 (GitHub Secrets 사용)
          echo "환경변수 설정..."
          echo "DB_URL=${{ secrets.DB_URL }}" > ~/.env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> ~/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ~/.env
          echo "" >> ~/.env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> ~/.env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> ~/.env
          echo "" >> ~/.env
          echo "GMAIL_USERNAME=${{ secrets.GMAIL_USERNAME }}" >> ~/.env
          echo "GMAIL_APP_PASSWORD=${{ secrets.GMAIL_APP_PASSWORD }}" >> ~/.env
          echo "" >> ~/.env
          echo "EXCHANGE_API_KEY=${{ secrets.EXCHANGE_API_KEY }}" >> ~/.env
          echo "" >> ~/.env
          echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}" >> ~/.env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> ~/.env
          echo "" >> ~/.env
          echo "SPRING_PROFILES_ACTIVE=prod" >> ~/.env
          
          # 애플리케이션 실행 (환경변수 포함)
          echo "애플리케이션 실행..."
          echo "환경변수 파일 확인:"
          cat ~/.env || echo "환경변수 파일이 없습니다"
          echo "환경변수로 애플리케이션 실행 시도..."
          if [ -f ~/.env ]; then
            nohup env $(cat ~/.env | xargs) java -jar build/libs/exProject-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
          else
            echo "환경변수 파일이 없어서 기본 설정으로 실행..."
            nohup java -jar build/libs/exProject-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
          fi
          
          # 잠시 대기
          sleep 3
          
          # 상태 확인
          echo "=== 배포 완료 ==="
          echo "실행 중인 프로세스:"
          ps aux | grep exProject | grep -v grep || echo "프로세스 없음"
          
          echo "로그 확인 (최근 5줄):"
          tail -5 app.log
        EOF
        
    - name: Check deployment status
      run: |
        ssh -i ~/.ssh/id_rsa -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          echo "=== 배포 상태 확인 ==="
          
          # 프로세스 확인
          if pgrep -f exProject > /dev/null; then
            echo "✅ 애플리케이션이 실행 중입니다"
            ps aux | grep exProject | grep -v grep
          else
            echo "❌ 애플리케이션이 실행되지 않았습니다"
          fi
          
          # 포트 확인
          if netstat -tlnp | grep :8080 > /dev/null; then
            echo "✅ 포트 8080이 열려있습니다"
          else
            echo "❌ 포트 8080이 열려있지 않습니다"
          fi
          
          # 로그 확인
          echo "최근 로그:"
          tail -10 exchange_rate_admin/app.log
        EOF
