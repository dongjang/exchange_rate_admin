    - name: Deploy application
      run: |
        ssh -i ~/.ssh/id_rsa -o ConnectTimeout=60 -o ServerAliveInterval=30 -o ServerAliveCountMax=3 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          echo "=== 배포 시작 ==="
          
          # 기존 프로세스 종료
          echo "기존 프로세스 확인 및 종료..."
          if pgrep -f exProject > /dev/null; then
            echo "실행 중인 프로세스 발견, 종료 중..."
            pkill -f exProject
            sleep 2
          else
            echo "실행 중인 프로세스 없음"
          fi
          
          # 프로젝트 클론/업데이트
          echo "프로젝트 클론/업데이트..."
          if [ -d "exchange_rate_admin" ]; then
            cd exchange_rate_admin
            git pull origin master
          else
            git clone https://github.com/${{ github.repository }}.git exchange_rate_admin
            cd exchange_rate_admin
          fi
          
          # 애플리케이션 빌드
          echo "애플리케이션 빌드..."
          ./gradlew clean build -x test
          
          # 환경변수 설정 (GitHub Secrets 사용)
          echo "환경변수 설정..."
          echo "DB_URL=${{ secrets.DB_URL }}" > ~/.env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> ~/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ~/.env
          echo "" >> ~/.env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> ~/.env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> ~/.env
          echo "" >> ~/.env
          echo "GMAIL_USERNAME=${{ secrets.GMAIL_USERNAME }}" >> ~/.env
          echo "GMAIL_APP_PASSWORD=${{ secrets.GMAIL_APP_PASSWORD }}" >> ~/.env
          echo "" >> ~/.env
          echo "EXCHANGE_API_KEY=${{ secrets.EXCHANGE_API_KEY }}" >> ~/.env
          echo "" >> ~/.env
          echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}" >> ~/.env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> ~/.env
          echo "" >> ~/.env
          echo "SPRING_PROFILES_ACTIVE=prod" >> ~/.env
          
          # 환경변수 파일 확인
          echo "환경변수 파일 내용:"
          cat ~/.env || echo "환경변수 파일이 없습니다"
          
          # 애플리케이션 실행 (운영 DB 사용)
          echo "애플리케이션 실행 (운영 DB 연결)..."
          set -a
          source ~/.env
          set +a
          
          nohup java -jar build/libs/exProject-0.0.1-SNAPSHOT.jar \
            --spring.profiles.active=prod > app.log 2>&1 &
          
          # 잠시 대기 (애플리케이션 시작 시간 확보)
          sleep 15
          
          # 상태 확인
          echo "=== 배포 완료 ==="
          echo "실행 중인 프로세스:"
          ps aux | grep exProject | grep -v grep || echo "프로세스 없음"
          
          echo "포트 8080 확인:"
          netstat -tlnp | grep :8080 || echo "포트 8080이 열려있지 않음"
          
          echo "로그 확인 (마지막 30줄):"
          tail -30 app.log
        EOF
