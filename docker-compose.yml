version: '3.8'

services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: exadmin-redis
    ports:
      - "6379:6379"
    environment:
      - TZ=Asia/Seoul
    volumes:
      - redis_data:/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - exadmin-network

  # Admin Application (로컬에서는 비활성화 - 직접 Spring Boot 실행)
  # admin-app:
  #   build: .
  #   container_name: exadmin-admin-app
  #   # 로컬에서는 포트 노출하지 않음 (EC2에서만 사용)
  #   # ports:
  #   #   - "8080:8080"
  #   environment:
  #     # Database
  #     DB_URL: ${DB_URL}
  #     DB_USERNAME: ${DB_USERNAME}
  #     DB_PASSWORD: ${DB_PASSWORD}
  #     
  #     # Redis
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
  #     
  #     # Application
  #     SPRING_PROFILES_ACTIVE: docker
  #     SERVER_PORT: 8080
  #     
  #     # Email (환경변수로 설정 필요)
  #     GMAIL_USERNAME: ${GMAIL_USERNAME}
  #     GMAIL_APP_PASSWORD: ${GMAIL_APP_PASSWORD}
  #     
  #     # Exchange API
  #     EXCHANGE_API_KEY: ${EXCHANGE_API_KEY}
  #     
  #     # AWS S3
  #     S3_BUCKET_NAME: ${S3_BUCKET_NAME}
  #     AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
  #     AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
  #     AWS_REGION: ${AWS_REGION}
  #     
  #     # CORS
  #     CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
  #   depends_on:
  #     - redis
  #   volumes:
  #     - ./uploads:/app/uploads
  #   networks:
  #     - exadmin-network

  # Prometheus 모니터링
  prometheus:
    image: prom/prometheus:latest
    container_name: exadmin-prometheus
    ports:
      - "9090:9090"
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./monitoring/prometheus-prod.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - exadmin-network

  # Grafana 대시보드
  grafana:
    image: grafana/grafana:latest
    container_name: exadmin-grafana
    ports:
      - "3000:3000"
    environment:
      - TZ=Asia/Seoul
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - exadmin-network
    depends_on:
      - prometheus

  # Node Exporter - 시스템 메트릭
  node-exporter:
    image: prom/node-exporter:latest
    container_name: exadmin-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - exadmin-network

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  exadmin-network:
    driver: bridge

